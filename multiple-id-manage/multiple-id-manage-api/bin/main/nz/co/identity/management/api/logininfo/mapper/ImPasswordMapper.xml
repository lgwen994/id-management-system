<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="nz.co.identity.management.api.logininfo.mapper.ImPasswordMapper">
	<resultMap id="BaseResultMap"
		type="nz.co.identity.management.api.logininfo.entity.ImPassword">
		<id column="login_id" jdbcType="VARCHAR" property="loginId" />
		<id column="company_code" jdbcType="VARCHAR" property="companyCode" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="password_changed_time" jdbcType="TIMESTAMP"
			property="passwordChangedTime" />
		<result column="password_changed_user" jdbcType="VARCHAR"
			property="passwordChangedUser" />
		<result column="password_must_change_flg" jdbcType="NUMERIC"
			property="passwordMustChangeFlg" />
	</resultMap>
	<sql id="Base_Column_List">
		login_id, company_code, password, password_changed_time,
		password_changed_user,
		password_must_change_flg
	</sql>
	<sql id="Base_Search_Condition">
	    <trim prefix="where" prefixOverrides="and|or">
            <if test="password.passwordChangedTime != null">
                and password_changed_time =
                #{password.passwordChangedTime,jdbcType=TIMESTAMP}
            </if>
            <if test="password.passwordChangedUser != null">
                and password_changed_user like CONCAT('%',
                #{password.passwordChangedUser,jdbcType=VARCHAR},'%')
            </if>
            <if test="password.passwordMustChangeFlg != null">
                and password_must_change_flg =
                #{password.passwordMustChangeFlg,jdbcType=NUMERIC}
            </if>
        </trim>
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="nz.co.identity.management.api.logininfo.entity.ImPassword"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from im_password
		where login_id = #{loginId,jdbcType=VARCHAR}
		and
		company_code = #{companyCode,jdbcType=VARCHAR}
	</select>
	<select id="selectPassword" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from im_password
        <include refid="Base_Search_Condition" />
        <if test="sort != null">
        order by
            <foreach item="item" collection="sort" separator=",">
                ${item.property} ${item.direction}
            </foreach>
        </if>
		limit #{pageSize,jdbcType=NUMERIC}
		<if test="offsetNum > 0">
			offset #{offsetNum,jdbcType=NUMERIC}
		</if>
	</select>

    <select id="selectCountByPassword" parameterType="java.util.Map"
        resultType="java.lang.Long">
        select count(1)
        from im_password
        <include refid="Base_Search_Condition" />
    </select>

	<delete id="deleteByPrimaryKey"
		parameterType="nz.co.identity.management.api.logininfo.entity.ImPassword">
		delete from im_password
		where login_id =
		#{loginId,jdbcType=VARCHAR}
		and company_code =
		#{companyCode,jdbcType=VARCHAR}
	</delete>
	<insert id="insert"
		parameterType="nz.co.identity.management.api.logininfo.entity.ImPassword">
		insert into im_password (login_id, company_code,
		password,
		password_changed_time, password_changed_user,
		password_must_change_flg)
		values (#{loginId,jdbcType=VARCHAR},
		#{companyCode,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{passwordChangedTime,jdbcType=TIMESTAMP},
		#{passwordChangedUser,jdbcType=VARCHAR},
		#{passwordMustChangeFlg,jdbcType=NUMERIC})
	</insert>
	<update id="updateByPrimaryKey"
		parameterType="nz.co.identity.management.api.logininfo.entity.ImPassword">
		update im_password
		set password =
		#{password,jdbcType=VARCHAR},
		password_changed_time =
		#{passwordChangedTime,jdbcType=TIMESTAMP},
		password_changed_user =
		#{passwordChangedUser,jdbcType=VARCHAR},
		password_must_change_flg =
		#{passwordMustChangeFlg,jdbcType=NUMERIC}
		where login_id =
		#{loginId,jdbcType=VARCHAR}
		and company_code =
		#{companyCode,jdbcType=VARCHAR}
	</update>
</mapper>